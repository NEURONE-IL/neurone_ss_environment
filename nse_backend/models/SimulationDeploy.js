const mongoose = require("mongoose");
require('dotenv').config({ path: 'settings.env' });

// Initializes the data model of a simulation deploy (this contains the metadata of the deploy, not the student data generated by the simulation)
async function initializeSimulationDeployModel () {

	const connections = await require("../config/db");

	const SimulationDeploySchema = mongoose.Schema({
		simulationId: {				// ID of the simulation used for the simulation deploy
			type: String,
			required: true
		},
		deployName: {				// Name of the database where the simulator-generated student data will be stored, which is also the name that the simulator itself will recognize the simulation by
			type: String,
			required: true
		},
		status: {					// Status of the simulation deploy (deployed or stopped)
			type: String,
			required: true
		},
		creationDate: {				// Date of creation
			type: Date,
			required: true
		},
		lastDataRequestDate: {		// Date of last data request from frontend
			type: Date,
			required: true
		}
	});

	const databaseName = process.env.DB_MONGO_SIM_ENVIRONMENT_DATA.slice(10).split('/')[1];

	let neuroneSimEnvironmentDB = connections.DB_MONGO_SIM_ENVIRONMENT_DATA;
	neuroneSimEnvironmentDB.useDb(databaseName);
	let neuroneSimEnvironmentModel = neuroneSimEnvironmentDB.model("SimulationDeploy", SimulationDeploySchema);

	return neuroneSimEnvironmentModel;

}

module.exports = initializeSimulationDeployModel();